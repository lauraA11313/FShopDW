{
	"name": "UpdateAndEvaluatePipeline",
	"properties": {
		"activities": [
			{
				"name": "Check_Arrivals",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT *\nFROM dbo.arrivals \nWHERE TRY_CONVERT(DATE,datetime) = TRY_CONVERT(DATE, GETDATE()-1);",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SourceArrivals",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check_Arrivals",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Check_Sales",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(greaterOrEquals(activity('Check_Arrivals').output.count,1),\ngreaterOrEquals(activity('Check_Sales').output.count,1)\n)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "WaitFalse",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "WaitTrue",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						},
						{
							"name": "UpdateDataForSales",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "WaitTrue",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "UpdateDataForSales",
									"type": "DataFlowReference"
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						},
						{
							"name": "UpdateDataForArrivals",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "WaitTrue",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "UpdateDataForArrivals",
									"type": "DataFlowReference"
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			},
			{
				"name": "Check_Sales",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT *\nFROM dbo.sales \nWHERE TRY_CONVERT(DATE,datetime) = TRY_CONVERT(DATE, GETDATE()-1);",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SourceSales",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "EvaluateSales",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "EvaluateSales",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2020-12-28T02:19:55Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}